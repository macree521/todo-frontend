{"ast":null,"code":"var _jsxFileName = \"/Users/mads/Desktop/code/yamas-niyamas-quiz/front-end-dir/src/Pages/ToDoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../Components/card';\nimport Form from '../Components/Form/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoPage() {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [addTodo, setAddTodo] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:5000/api', {\n      //https://mc-todo-backend.herokuapp.com/api\n      mode: 'no-cors'\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => console.log(data));\n  }, []);\n\n  const handleFormChange = inputValue => {\n    setAddTodo(inputValue);\n    console.log(addTodo);\n  };\n\n  const handleFormSubmit = () => {\n    fetch('http://localhost:5000/api/create', {\n      //https://mc-todo-backend.herokuapp.com/api/create'\n      method: ['POST'],\n      body: JSON.stringify({\n        content: addTodo\n      }),\n      headers: {\n        \"Content-type\": \"application/json;  charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(message => {\n      console.log(message);\n      setAddTodo('');\n      getLatestTodos();\n    });\n  };\n\n  const getLatestTodos = () => {\n    fetch('http://localhost:5000/api').then(response => {\n      //'https://mc-todo-backend.herokuapp.com/api'\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setTodo(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addTodo,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      listOfTodos: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoPage, \"45Ja5tGjMfV/uaS2qYn2eVTmbt8=\");\n\n_c = ToDoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoPage\");","map":{"version":3,"sources":["/Users/mads/Desktop/code/yamas-niyamas-quiz/front-end-dir/src/Pages/ToDoPage.js"],"names":["React","useState","useEffect","Card","Form","ToDoPage","todo","setTodo","addTodo","setAddTodo","fetch","mode","then","response","ok","json","data","console","log","handleFormChange","inputValue","handleFormSubmit","method","body","JSON","stringify","content","headers","message","getLatestTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,eAAe,SAASC,QAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,2BAAD,EAA8B;AAC/B;AACAC,MAAAA,IAAI,EAAE;AAFyB,KAA9B,CAAL,CAICC,IAJD,CAIMC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KARD,EAQGH,IARH,CAQQI,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CARhB;AASH,GAVQ,EAUP,EAVO,CAAT;;AAYA,QAAMG,gBAAgB,GAAIC,UAAD,IAAgB;AACrCX,IAAAA,UAAU,CAACW,UAAD,CAAV;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACH,GAHD;;AAKA,QAAMa,gBAAgB,GAAG,MAAM;AAC3BX,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtC;AACAY,MAAAA,MAAM,EAAE,CAAC,MAAD,CAF8B;AAGtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,OAAO,EAAElB;AADQ,OAAf,CAHgC;AAMtCmB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAN6B,KAArC,CAAL,CASGf,IATH,CASQC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EATpB,EAUKH,IAVL,CAUUgB,OAAO,IAAI;AACbX,MAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AACAnB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAoB,MAAAA,cAAc;AACjB,KAdL;AAeH,GAhBD;;AAkBA,QAAMA,cAAc,GAAG,MAAM;AACzBnB,IAAAA,KAAK,CAAC,2BAAD,CAAL,CAAmCE,IAAnC,CAAwCC,QAAQ,IAAI;AAChD;AACA,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZ,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KALD,EAKGH,IALH,CAKQI,IAAI,IAAIT,OAAO,CAACS,IAAD,CALvB;AAMH,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAER,OAAjB;AACA,MAAA,YAAY,EAAEW,gBADd;AAEA,MAAA,YAAY,EAAEE;AAFd;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEf;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAxDuBD,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Card from '../Components/card';\nimport Form from '../Components/Form/form';\n\nexport default function ToDoPage () {\n    const [todo, setTodo] = useState([])\n    const [addTodo, setAddTodo] = useState('')\n\n    useEffect(() => {\n        fetch('http://localhost:5000/api', {\n            //https://mc-todo-backend.herokuapp.com/api\n            mode: 'no-cors'\n        })\n        .then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => console.log(data))\n    },[])\n\n    const handleFormChange = (inputValue) => {\n        setAddTodo(inputValue)\n        console.log(addTodo)\n    }\n\n    const handleFormSubmit = () => {\n        fetch('http://localhost:5000/api/create', {\n            //https://mc-todo-backend.herokuapp.com/api/create'\n            method: ['POST'],\n            body: JSON.stringify({\n                content: addTodo\n            }),\n            headers: {\n                \"Content-type\": \"application/json;  charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(message => { \n                console.log(message)\n                setAddTodo('')\n                getLatestTodos()\n            })\n    }\n\n    const getLatestTodos = () => {\n        fetch('http://localhost:5000/api').then(response => {\n            //'https://mc-todo-backend.herokuapp.com/api'\n            if(response.ok) {\n                return response.json()\n            }\n        }).then(data => setTodo(data))\n    }\n\n    return (\n        <div>\n            <Form userInput={addTodo} \n            onFormChange={handleFormChange}\n            onFormSubmit={handleFormSubmit} />\n            <Card listOfTodos={todo} />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}