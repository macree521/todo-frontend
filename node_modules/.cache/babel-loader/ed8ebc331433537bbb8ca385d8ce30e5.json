{"ast":null,"code":"var _jsxFileName = \"/Users/mads/Desktop/code/yamas-niyamas-quiz/src/Pages/ToDoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../Components/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoPage() {\n  _s();\n\n  const [toDo, setToDo] = useState([]);\n  useEffect(() => {\n    fetch('/api').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setToDo(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      listOfToDos: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoPage, \"8/KT+TnVI7jyOR03Lu2KKb8RYD4=\");\n\n_c = ToDoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoPage\");","map":{"version":3,"sources":["/Users/mads/Desktop/code/yamas-niyamas-quiz/src/Pages/ToDoPage.js"],"names":["React","useState","useEffect","Card","ToDoPage","toDo","setToDo","fetch","then","response","ok","json","data","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,eAAe,SAASC,QAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAoBC,QAAQ,IAAI;AAC5B,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAIN,OAAO,CAACM,IAAD,CAJvB;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhBuBT,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Card from '../Components/card';\n\nexport default function ToDoPage () {\n    const [toDo, setToDo] = useState([])\n\n    useEffect(() => {\n        fetch('/api').then( response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => setToDo(data))\n    }, [])\n\n    return (\n        <div>\n            <Card listOfToDos={todo}/>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}